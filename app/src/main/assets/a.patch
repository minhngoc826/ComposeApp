Subject: [PATCH] update lazy list and conversation full
---
Index: app/src/main/java/com/example/composeapp/theme/Theme.kt
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/theme/Theme.kt b/app/src/main/java/com/example/composeapp/theme/Theme.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/composeapp/theme/Theme.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ /dev/null	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
@@ -1,58 +0,0 @@
-package com.example.composeapp.theme
-
-import android.app.Activity
-import android.os.Build
-import androidx.compose.foundation.isSystemInDarkTheme
-import androidx.compose.material3.MaterialTheme
-import androidx.compose.material3.darkColorScheme
-import androidx.compose.material3.dynamicDarkColorScheme
-import androidx.compose.material3.dynamicLightColorScheme
-import androidx.compose.material3.lightColorScheme
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.platform.LocalContext
-
-private val DarkColorScheme = darkColorScheme(
-    primary = Purple80,
-    secondary = PurpleGrey80,
-    tertiary = Pink80
-)
-
-private val LightColorScheme = lightColorScheme(
-    primary = Purple40,
-    secondary = PurpleGrey40,
-    tertiary = Pink40
-
-    /* Other default colors to override
-    background = Color(0xFFFFFBFE),
-    surface = Color(0xFFFFFBFE),
-    onPrimary = Color.White,
-    onSecondary = Color.White,
-    onTertiary = Color.White,
-    onBackground = Color(0xFF1C1B1F),
-    onSurface = Color(0xFF1C1B1F),
-    */
-)
-
-@Composable
-fun ComposeAppTheme(
-    darkTheme: Boolean = isSystemInDarkTheme(),
-    // Dynamic color is available on Android 12+
-    dynamicColor: Boolean = true,
-    content: @Composable () -> Unit
-) {
-    val colorScheme = when {
-        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {
-            val context = LocalContext.current
-            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)
-        }
-
-        darkTheme -> DarkColorScheme
-        else -> LightColorScheme
-    }
-
-    MaterialTheme(
-        colorScheme = colorScheme,
-        typography = Typography,
-        content = content
-    )
-}
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/ui/theme/Color.kt
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ui/theme/Color.kt b/app/src/main/java/com/example/composeapp/ui/theme/Color.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/composeapp/ui/theme/Color.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ /dev/null	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
@@ -1,11 +0,0 @@
-package com.example.composeapp.ui.theme
-
-import androidx.compose.ui.graphics.Color
-
-val Purple80 = Color(0xFFD0BCFF)
-val PurpleGrey80 = Color(0xFFCCC2DC)
-val Pink80 = Color(0xFFEFB8C8)
-
-val Purple40 = Color(0xFF6650a4)
-val PurpleGrey40 = Color(0xFF625b71)
-val Pink40 = Color(0xFF7D5260)
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/ui/theme/Type.kt
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ui/theme/Type.kt b/app/src/main/java/com/example/composeapp/ui/theme/Type.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/composeapp/ui/theme/Type.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ /dev/null	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
@@ -1,34 +0,0 @@
-package com.example.composeapp.ui.theme
-
-import androidx.compose.material3.Typography
-import androidx.compose.ui.text.TextStyle
-import androidx.compose.ui.text.font.FontFamily
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.unit.sp
-
-// Set of Material typography styles to start with
-val Typography = Typography(
-    bodyLarge = TextStyle(
-        fontFamily = FontFamily.Default,
-        fontWeight = FontWeight.Normal,
-        fontSize = 16.sp,
-        lineHeight = 24.sp,
-        letterSpacing = 0.5.sp
-    )
-    /* Other default text styles to override
-    titleLarge = TextStyle(
-        fontFamily = FontFamily.Default,
-        fontWeight = FontWeight.Normal,
-        fontSize = 22.sp,
-        lineHeight = 28.sp,
-        letterSpacing = 0.sp
-    ),
-    labelSmall = TextStyle(
-        fontFamily = FontFamily.Default,
-        fontWeight = FontWeight.Medium,
-        fontSize = 11.sp,
-        lineHeight = 16.sp,
-        letterSpacing = 0.5.sp
-    )
-    */
-)
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/conversation/ui/ConversationActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/conversation/ui/ConversationActivity.kt b/app/src/main/java/com/example/composeapp/conversation/ui/ConversationActivity.kt
--- a/app/src/main/java/com/example/composeapp/conversation/ui/ConversationActivity.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/conversation/ui/ConversationActivity.kt	(date 1731428530308)
@@ -9,8 +9,10 @@
 import androidx.compose.foundation.layout.Column
 import androidx.compose.foundation.layout.Row
 import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.WindowInsets
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.ime
 import androidx.compose.foundation.layout.imePadding
 import androidx.compose.foundation.layout.navigationBarsPadding
 import androidx.compose.foundation.layout.padding
@@ -23,9 +25,9 @@
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.KeyboardArrowDown
 import androidx.compose.material.icons.filled.Send
-import androidx.compose.material3.Divider
 import androidx.compose.material3.FabPosition
 import androidx.compose.material3.FloatingActionButton
+import androidx.compose.material3.HorizontalDivider
 import androidx.compose.material3.Icon
 import androidx.compose.material3.IconButton
 import androidx.compose.material3.Scaffold
@@ -37,10 +39,13 @@
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
 import androidx.compose.runtime.rememberCoroutineScope
+import androidx.compose.runtime.saveable.rememberSaveable
 import androidx.compose.runtime.setValue
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.platform.LocalDensity
+import androidx.compose.ui.platform.LocalSoftwareKeyboardController
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
@@ -54,14 +59,14 @@
 import com.example.composeapp.common.SubScreen
 import com.example.composeapp.conversation.viewmodel.ConversationViewModel
 import com.example.composeapp.conversation.viewmodel.Message
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 import kotlinx.coroutines.CoroutineScope
 import kotlinx.coroutines.launch
 import java.util.Date
 
 class ConversationActivity : ComponentActivity() {
     companion object {
-        const val TAG = "BasicActivity"
+        const val TAG = "ConversationActivity"
     }
 
     private var messages = listOf<Message>() // empty list
@@ -90,7 +95,8 @@
     val curScreen = SubScreen.valueOf(navBackStackEntry?.destination?.route ?: SubScreen.APP_BASIC.name)
     val scope = rememberCoroutineScope()
     val lazyListState = rememberLazyListState()     // State hoisted to the ConversationScreen
-    val messages by conversationViewModel.messages.collectAsState(initial = emptyList())
+    val isKeyboardVisible = WindowInsets.ime.getBottom(LocalDensity.current) > 0 // keyboard show or hide
+    val keyboardController = LocalSoftwareKeyboardController.current
 
     Scaffold(
         topBar = {
@@ -106,7 +112,7 @@
         },
         floatingActionButton = {
             JumpToBottom(
-                onClicked = { scope.launch { lazyListState.scrollToItem(0) } }
+                onClicked = { scope.launch { lazyListState.scrollToItem(conversationViewModel.messages.size) } }
             )
         },
         floatingActionButtonPosition = FabPosition.Center,
@@ -116,7 +122,7 @@
             .navigationBarsPadding()
             .imePadding()
     ) { innerPadding ->
-        Logger.d(ConversationActivity.TAG, "ConversationScreen: $innerPadding")
+        Logger.d(ConversationActivity.TAG, "ConversationScreen: innerPadding = $innerPadding")
         Column(
             modifier = Modifier
                 .fillMaxSize()
@@ -137,7 +143,7 @@
                     .background(color = Color.LightGray)
                 ,
                 scope = scope,
-                messages = messages,
+                messages = conversationViewModel.messages,
                 lazyListState = lazyListState
             )     // Reuse same state in MessageList
 
@@ -153,12 +159,16 @@
                 ,
                 onMessageSent = {  text: String, time: String ->                        // Apply UI logic to lazyListState
                     val newMessage = Message(
-                        channelId = messages.size.toString(),
+                        channelId = (conversationViewModel.messages.size + 1).toString(),
                         content = text,
                         timestamp = time
                     )
+                    conversationViewModel.sendMessage(newMessage)      // Add message to ViewModel's LiveData
+                    if (isKeyboardVisible) {
+                        keyboardController?.hide()
+                    }
 
-                    scope.launch { lazyListState.scrollToItem(0) }
+                    scope.launch { lazyListState.scrollToItem(conversationViewModel.messages.size) }
                 }
             )
         }
@@ -206,7 +216,7 @@
     ) {
         Text(text = "${message.content}", fontSize = 18.sp)
         Text(text = "${message.timestamp}", fontSize = 12.sp)
-        Divider(
+        HorizontalDivider(
             modifier = Modifier.fillMaxWidth(),
             thickness = 1.dp
         )
@@ -225,7 +235,7 @@
         verticalAlignment = Alignment.CenterVertically,
         horizontalArrangement = Arrangement.Center
     ) {
-        var text by remember { mutableStateOf("") } // Remember a mutable state variable
+        var text by rememberSaveable { mutableStateOf("") } // Remember a mutable state variable
         TextField(
             value = text,
             onValueChange = { text = it },
@@ -240,6 +250,8 @@
             onClick = {
                 val timestamp = Date(System.currentTimeMillis())
                 onMessageSent(text, "" + timestamp.hours + ":" + timestamp.minutes)
+                text = ""
+                // check keyborad show/hide
             }
         ) {
             Icon(imageVector = Icons.Filled.Send, contentDescription = "Send message", tint = androidx.compose.ui.graphics.Color.Blue)
Index: app/src/main/java/com/example/composeapp/navigation/profile/ui/NavigationActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/navigation/profile/ui/NavigationActivity.kt b/app/src/main/java/com/example/composeapp/navigation/profile/ui/NavigationActivity.kt
--- a/app/src/main/java/com/example/composeapp/navigation/profile/ui/NavigationActivity.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/navigation/profile/ui/NavigationActivity.kt	(date 1731406163922)
@@ -30,7 +30,7 @@
 import com.example.composeapp.navigation.profile.ui.screen.LoginScreen
 import com.example.composeapp.navigation.profile.ui.screen.ProfileScreen
 import com.example.composeapp.navigation.profile.viewmodel.UserViewModel
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 class NavigationActivity : ComponentActivity() {
     companion object {
Index: app/src/main/java/com/example/composeapp/ssm/ui/screen/SelectOsScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/screen/SelectOsScreen.kt b/app/src/main/java/com/example/composeapp/ssm/ui/screen/SelectOsScreen.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/screen/SelectOsScreen.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/screen/SelectOsScreen.kt	(date 1731396227742)
@@ -23,7 +23,7 @@
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import com.example.composeapp.R
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 @Composable
 fun SelectOsScreen(
Index: app/src/main/java/com/example/composeapp/ssm/ui/screen/SearchingScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/screen/SearchingScreen.kt b/app/src/main/java/com/example/composeapp/ssm/ui/screen/SearchingScreen.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/screen/SearchingScreen.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/screen/SearchingScreen.kt	(date 1731396227736)
@@ -20,7 +20,7 @@
 import androidx.compose.ui.unit.sp
 import androidx.navigation.NavHostController
 import com.example.composeapp.R
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 @Composable
 fun SearchingScreen() {
Index: app/src/main/java/com/example/composeapp/conversation/viewmodel/ConversationViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/conversation/viewmodel/ConversationViewModel.kt b/app/src/main/java/com/example/composeapp/conversation/viewmodel/ConversationViewModel.kt
--- a/app/src/main/java/com/example/composeapp/conversation/viewmodel/ConversationViewModel.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/conversation/viewmodel/ConversationViewModel.kt	(date 1731427378226)
@@ -1,6 +1,8 @@
 package com.example.composeapp.conversation.viewmodel
 
+import androidx.compose.runtime.toMutableStateList
 import androidx.lifecycle.ViewModel
+import com.example.composeapp.common.Logger
 import com.example.composeapp.conversation.data.LocalMessageDataSourceImpl
 import com.example.composeapp.conversation.data.MessageRepository
 import kotlinx.coroutines.flow.MutableStateFlow
@@ -11,10 +13,24 @@
     messageRepository: MessageRepository = MessageRepository(LocalMessageDataSourceImpl())
 ) : ViewModel() {
 
-    private val _messages = MutableStateFlow(messageRepository.getListMessages(channelId))
-    val messages = _messages.asStateFlow() // TODO: 2021-08-09 replace with stateIn when it's available in compose
+    // way 1: can not add new message / delete message
+//    private var _messages = MutableStateFlow(messageRepository.getListMessages(channelId))
+//    var messages = _messages.asStateFlow() // TODO: 2021-08-09 replace with stateIn when it's available in compose
+//
+//
+//    fun sendMessage(message: Message) {
+//        Logger.d("ViewModel", "sendMessage $message")
+//        _messages.value.
+//        messages.value.as
+//    }
+
+    // way 2
+    private val _messages = messageRepository.getLatestMessages(channelId).toMutableStateList() // mutableListOf<>().append { addAll() }
+    val messages: List<Message>
+        get() = _messages
 
     fun sendMessage(message: Message) {
-
+        Logger.d("ViewModel", "sendMessage $message")
+        _messages.add(message)
     }
 }
Index: app/src/main/java/com/example/composeapp/basic/lazylist/TaskViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/basic/lazylist/TaskViewModel.kt b/app/src/main/java/com/example/composeapp/basic/lazylist/TaskViewModel.kt
new file mode 100644
--- /dev/null	(date 1731409673303)
+++ b/app/src/main/java/com/example/composeapp/basic/lazylist/TaskViewModel.kt	(date 1731409673303)
@@ -0,0 +1,35 @@
+package com.example.composeapp.basic.lazylist
+
+import androidx.compose.runtime.toMutableStateList
+import androidx.lifecycle.ViewModel
+import com.example.composeapp.common.Logger
+import kotlinx.coroutines.flow.MutableStateFlow
+
+class TaskViewModel() : ViewModel() {
+
+    // way 1
+//    private val _tasks1 = getListTasks().toMutableStateList()                        //
+//    private val _tasks = _tasks1
+    // way 2
+//    private val _tasks2 = mutableListOf<Task>().apply { addAll(getListTasks()) }    //
+//    private val _tasks = _tasks2.toMutableStateList()
+    // way 3
+    private val _tasks3 = MutableStateFlow(getListTasks())              //
+    private val _tasks = _tasks3.value.toMutableStateList()
+
+    val tasks: List<Task>
+        get() = _tasks
+
+    fun removeTask(task: Task) {
+        Logger.d(TAG, "removeTask: task: $task - size: ${tasks.size}")
+        _tasks.remove(task)
+    }
+
+    companion object {
+        private const val TAG = "TaskViewModel"
+    }
+}
+
+private fun getListTasks() = List(30) { i -> Task(i, "Task # $i") }
+
+data class Task(val id: Int, val title: String)
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/basic/lazylist/BasicalScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/basic/lazylist/BasicalScreen.kt b/app/src/main/java/com/example/composeapp/basic/lazylist/BasicalScreen.kt
new file mode 100644
--- /dev/null	(date 1731399018293)
+++ b/app/src/main/java/com/example/composeapp/basic/lazylist/BasicalScreen.kt	(date 1731399018293)
@@ -0,0 +1,7 @@
+package com.example.composeapp.basic.lazylist
+
+import androidx.compose.runtime.Composable
+
+@Composable
+fun BaseScreen() {
+}
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/conversation/data/LocalMessageDataSourceImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/conversation/data/LocalMessageDataSourceImpl.kt b/app/src/main/java/com/example/composeapp/conversation/data/LocalMessageDataSourceImpl.kt
--- a/app/src/main/java/com/example/composeapp/conversation/data/LocalMessageDataSourceImpl.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/conversation/data/LocalMessageDataSourceImpl.kt	(date 1731427006802)
@@ -15,7 +15,7 @@
 
     override fun getListMessages(channelId: String): List<Message> {
         var messages = listOf<Message>()
-        for (i in 10..30) {
+        for (i in 1..20) {
             messages += Message(
                 channelId = i.toString(),
                 content = "Hello $i",
@@ -27,7 +27,7 @@
 
     override fun getLatestMessages(channelId: String): List<Message> {
         var messages = listOf<Message>()
-        for (i in 10..30) {
+        for (i in 1..20) {
             messages += Message(
                 channelId = i.toString(),
                 content = "Hello $i",
Index: app/src/main/java/com/example/composeapp/basic/lazylist/BasicLazyListScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/basic/lazylist/BasicLazyListScreen.kt b/app/src/main/java/com/example/composeapp/basic/lazylist/BasicLazyListScreen.kt
new file mode 100644
--- /dev/null	(date 1731404443370)
+++ b/app/src/main/java/com/example/composeapp/basic/lazylist/BasicLazyListScreen.kt	(date 1731404443370)
@@ -0,0 +1,91 @@
+package com.example.composeapp.basic.lazylist
+
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.imePadding
+import androidx.compose.foundation.layout.navigationBarsPadding
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.statusBarsPadding
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Close
+import androidx.compose.material3.Button
+import androidx.compose.material3.Checkbox
+import androidx.compose.material3.Divider
+import androidx.compose.material3.Icon
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableIntStateOf
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.saveable.rememberSaveable
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+import androidx.lifecycle.viewmodel.compose.viewModel
+
+@Composable
+fun BasicLazyListScreen(
+    taskViewModel: TaskViewModel = viewModel(),
+    modifier: Modifier = Modifier
+) {
+    Column(
+        modifier = modifier.fillMaxSize(),
+        verticalArrangement = Arrangement.Top,
+        horizontalAlignment = Alignment.Start
+    ) {
+        TaskCounter(modifier)
+
+        TaskList(taskViewModel.tasks, modifier = modifier.weight(1f), onCloseTask = { task -> taskViewModel.removeTask(task) })
+    }
+}
+
+@Composable
+fun TaskCounter(modifier: Modifier) {
+    Column(modifier = Modifier.fillMaxWidth().background(color = androidx.compose.ui.graphics.Color.LightGray).padding(start = 16.dp, end = 10.dp, top = 10.dp)) {
+        var count by rememberSaveable { mutableIntStateOf(0) } //
+
+        Text(text = "You have $count tasks to do today!")
+        Button(onClick = { count++ }, modifier = modifier.padding(8.dp)) {
+            Text(text = "Add a task")
+        }
+    }
+}
+
+@Composable
+fun TaskList(tasks: List<Task>, modifier: Modifier, onCloseTask: (Task) -> Unit) {
+    LazyColumn(modifier = modifier) {
+        items(items = tasks, key = { task -> task.id }) {
+            task -> TaskItem(task.title, modifier, onClose = { onCloseTask(task) }
+            )
+        }
+    }
+}
+
+@Composable
+fun TaskItem(taskName: String, modifier: Modifier, onClose: () -> Unit) {
+    var checkedState by rememberSaveable { mutableStateOf(false) }
+
+    Row(
+        modifier = Modifier.fillMaxWidth().padding(start = 20.dp, end = 16.dp, top = 5.dp),
+        verticalAlignment = Alignment.CenterVertically,
+    ) {
+        Text(text = taskName, modifier.weight(1f))
+        Checkbox(
+            checked = checkedState,
+            onCheckedChange = { checkedState = it }
+        )
+
+        IconButton(onClick = onClose) {
+            Icon(imageVector = Icons.Filled.Close, contentDescription = "Close")
+        }
+    }
+}
Index: app/src/main/java/com/example/composeapp/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/MainActivity.kt b/app/src/main/java/com/example/composeapp/MainActivity.kt
--- a/app/src/main/java/com/example/composeapp/MainActivity.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/MainActivity.kt	(date 1731396227656)
@@ -41,7 +41,7 @@
 import com.example.composeapp.common.SubScreen
 import com.example.composeapp.navigation.profile.ui.NavigationActivity
 import com.example.composeapp.ssm.ui.SsmActivity
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 class MainActivity : ComponentActivity() {
     companion object {
Index: app/src/main/java/com/example/composeapp/basic/BasicActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/basic/BasicActivity.kt b/app/src/main/java/com/example/composeapp/basic/BasicActivity.kt
--- a/app/src/main/java/com/example/composeapp/basic/BasicActivity.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/basic/BasicActivity.kt	(date 1731404092431)
@@ -4,17 +4,31 @@
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
 import androidx.activity.enableEdgeToEdge
-import androidx.compose.material3.Text
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.imePadding
+import androidx.compose.foundation.layout.navigationBarsPadding
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.statusBarsPadding
+import androidx.compose.material3.Scaffold
 import androidx.compose.runtime.Composable
-import androidx.compose.ui.res.stringResource
+import androidx.compose.runtime.getValue
+import androidx.compose.ui.Modifier
 import androidx.compose.ui.tooling.preview.Preview
-import com.example.composeapp.R
-import com.example.composeapp.theme.ComposeAppTheme
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.currentBackStackEntryAsState
+import androidx.navigation.compose.rememberNavController
+import com.example.composeapp.basic.lazylist.BaseScreen
+import com.example.composeapp.basic.lazylist.BasicLazyListScreen
+import com.example.composeapp.common.MyTopAppBar
+import com.example.composeapp.common.SubScreen
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 class BasicActivity : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
-        enableEdgeToEdge()
         super.onCreate(savedInstanceState)
+        enableEdgeToEdge()
         setContent {
             ComposeAppTheme {
                 BasicScreen()  // BasicScreen is a composable function that will be called when this activity is created.
@@ -24,8 +38,37 @@
 }
 
 @Composable
-fun BasicScreen() {
-    Text(text = stringResource(id = R.string.app_basic_screen))
+fun BasicScreen(
+    navHostController: NavHostController = rememberNavController()
+) {
+    val navBackStackEntry by navHostController.currentBackStackEntryAsState()
+    val curScreen = SubScreen.valueOf(navBackStackEntry?.destination?.route ?: SubScreen.BASIC_LAZY_LIST.name)
+
+    Scaffold(
+        topBar = {
+            MyTopAppBar(
+                curScreen = curScreen,
+                canNavigateUp = navHostController.previousBackStackEntry != null,
+                navigateUp = { navHostController.navigateUp() },
+                modifier = Modifier.fillMaxWidth()
+            )
+        }
+    ) { innerPadding ->
+        NavHost(
+            navController = navHostController,
+            startDestination = SubScreen.BASIC_LAZY_LIST.name,
+            modifier = Modifier.padding(innerPadding)
+        ) {
+            composable(route = SubScreen.BASIC_LAZY_LIST.name) {
+                BasicLazyListScreen()
+            }
+
+            composable(route = SubScreen.BASIC_BASIC.name) {
+                BaseScreen()
+            }
+        }
+
+    }
 }
 
 @Preview(showBackground = true)
Index: app/src/main/java/com/example/composeapp/theme/Type.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/theme/Type.kt b/app/src/main/java/com/example/composeapp/common/theme/Type.kt
rename from app/src/main/java/com/example/composeapp/theme/Type.kt
rename to app/src/main/java/com/example/composeapp/common/theme/Type.kt
--- a/app/src/main/java/com/example/composeapp/theme/Type.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/common/theme/Type.kt	(date 1731396227608)
@@ -1,4 +1,4 @@
-package com.example.composeapp.theme
+package com.example.composeapp.common.theme
 
 import androidx.compose.material3.Typography
 import androidx.compose.ui.text.TextStyle
Index: app/src/main/java/com/example/composeapp/ui/theme/Theme.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ui/theme/Theme.kt b/app/src/main/java/com/example/composeapp/common/theme/Theme.kt
rename from app/src/main/java/com/example/composeapp/ui/theme/Theme.kt
rename to app/src/main/java/com/example/composeapp/common/theme/Theme.kt
--- a/app/src/main/java/com/example/composeapp/ui/theme/Theme.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/common/theme/Theme.kt	(date 1731396227621)
@@ -1,4 +1,4 @@
-package com.example.composeapp.ui.theme
+package com.example.composeapp.common.theme
 
 import android.app.Activity
 import android.os.Build
Index: app/src/main/java/com/example/composeapp/theme/Color.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/theme/Color.kt b/app/src/main/java/com/example/composeapp/common/theme/Color.kt
rename from app/src/main/java/com/example/composeapp/theme/Color.kt
rename to app/src/main/java/com/example/composeapp/common/theme/Color.kt
--- a/app/src/main/java/com/example/composeapp/theme/Color.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/common/theme/Color.kt	(date 1731396227639)
@@ -1,4 +1,4 @@
-package com.example.composeapp.theme
+package com.example.composeapp.common.theme
 
 import androidx.compose.ui.graphics.Color
 
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/res/values/strings.xml	(date 1731397673844)
@@ -16,4 +16,6 @@
     <string name="nav_home_screen">Nav home screen</string>
     <string name="nav_profile_screen">Nav profile screen</string>
     <string name="nav_login_screen">Nav login screen</string>
+    <string name="basic_basic_screen">Basical screen</string>
+    <string name="basic_lazy_list_screen">Lazy list screen</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/common/SubScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/common/SubScreen.kt b/app/src/main/java/com/example/composeapp/common/SubScreen.kt
--- a/app/src/main/java/com/example/composeapp/common/SubScreen.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/common/SubScreen.kt	(date 1731398288288)
@@ -21,6 +21,9 @@
 //    Navigation
     NAV_HOME(titleId = R.string.nav_home_screen),
     NAV_PROFILE(titleId = R.string.nav_profile_screen),
-    NAV_LOGIN(titleId = R.string.nav_login_screen)
+    NAV_LOGIN(titleId = R.string.nav_login_screen),
 
+//    Basic
+    BASIC_BASIC(titleId = R.string.basic_basic_screen),
+    BASIC_LAZY_LIST(titleId = R.string.basic_lazy_list_screen),
 }
\ No newline at end of file
Index: app/src/main/java/com/example/composeapp/ssm/ui/screen/MainScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/screen/MainScreen.kt b/app/src/main/java/com/example/composeapp/ssm/ui/screen/MainScreen.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/screen/MainScreen.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/screen/MainScreen.kt	(date 1731396227731)
@@ -24,7 +24,7 @@
 import androidx.compose.ui.unit.sp
 import com.example.composeapp.R
 import com.example.composeapp.common.SubScreen
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 @Composable
 fun MainScreen(
Index: app/src/main/java/com/example/composeapp/ssm/ui/screen/ConnectionScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/screen/ConnectionScreen.kt b/app/src/main/java/com/example/composeapp/ssm/ui/screen/ConnectionScreen.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/screen/ConnectionScreen.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/screen/ConnectionScreen.kt	(date 1731396227726)
@@ -23,7 +23,7 @@
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
 import com.example.composeapp.R
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 @Composable
 fun ConnectionScreen(
Index: app/src/main/java/com/example/composeapp/ssm/ui/SsmScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/SsmScreen.kt b/app/src/main/java/com/example/composeapp/ssm/ui/SsmScreen.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/SsmScreen.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/SsmScreen.kt	(date 1731396227710)
@@ -29,7 +29,7 @@
 import com.example.composeapp.ssm.ui.screen.SearchingScreen
 import com.example.composeapp.ssm.ui.screen.SelectOsScreen
 import com.example.composeapp.ssm.viewmodel.SsmViewModel
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 /* Navigation-Compose
 * 1. NavController:     redirect composable (screen) to destination
Index: app/src/main/java/com/example/composeapp/ssm/ui/SsmNewActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/SsmNewActivity.kt b/app/src/main/java/com/example/composeapp/ssm/ui/SsmNewActivity.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/SsmNewActivity.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/SsmNewActivity.kt	(date 1731396227706)
@@ -12,7 +12,7 @@
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.lifecycle.enableSavedStateHandles
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 class SsmNewActivity : ComponentActivity() {
 
Index: app/src/main/java/com/example/composeapp/ssm/ui/SsmActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/composeapp/ssm/ui/SsmActivity.kt b/app/src/main/java/com/example/composeapp/ssm/ui/SsmActivity.kt
--- a/app/src/main/java/com/example/composeapp/ssm/ui/SsmActivity.kt	(revision a0e7cd54fe32efae155b2662df61f46b826d4ba3)
+++ b/app/src/main/java/com/example/composeapp/ssm/ui/SsmActivity.kt	(date 1731396227701)
@@ -3,7 +3,7 @@
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
-import com.example.composeapp.theme.ComposeAppTheme
+import com.example.composeapp.common.theme.ComposeAppTheme
 
 class SsmActivity : ComponentActivity() {
 
